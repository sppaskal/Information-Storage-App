# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
version: '3'
services:
  mysql_auth_db:
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: mysqlpass
      MYSQL_DATABASE: auth_db
      MYSQL_USER: sppaskal
      MYSQL_PASSWORD: mysqlpass
    ports:
      - "3307:3306"
    volumes:
      - ./db_dumps/auth_db.sql:/docker-entrypoint-initdb.d/auth_db.sql
    command: --default-authentication-plugin=mysql_native_password
    image: mysql:8.0.34

  mysql_account_information:
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: mysqlpass
      MYSQL_DATABASE: account_information
      MYSQL_USER: sppaskal
      MYSQL_PASSWORD: mysqlpass
    ports:
      - "3308:3306"
    volumes:
      - ./db_dumps/account_information.sql:/docker-entrypoint-initdb.d/account_information.sql
    command: --default-authentication-plugin=mysql_native_password
    image: mysql:8.0.34

  django:
    build:
      context: .
    ports:
      - 8000:8000
    volumes:
      - .:/app
    command: python manage.py runserver 0.0.0.0:8000
    image: info-app-django:v1.0

volumes:
  mysql_auth_db_data:
  mysql_account_information_data: